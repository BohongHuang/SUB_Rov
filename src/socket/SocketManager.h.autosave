#ifndef SOCKETMANAGER_H
#define SOCKETMANAGER_H

#include <QThread>
#include <QTcpSocket>

#include "SocketThread.h"
#include "SendManager.h"
#include "ReceiveManager.h"
#include "../Log/MyLogging.h"


class SocketLogging : public MyLogging
{
public:
    void info(const QString& msg ){ log(msg, INFO, SOCKET_LOGGING); }
    void debug(const QString& msg ){ log(msg, DEBUG, SOCKET_LOGGING); }
    void warning(const QString& msg ){ log(msg, WARNING, SOCKET_LOGGING); }
};

SocketLogging SocketLog;

class SocketManager : public QObject
{
    Q_OBJECT
public:
    SocketManager();

    SendManager* getSendManager(){return this->sendManager; };
    ReceiveManager* getReceiveManager(){return this->receiveManager;};

    void enableSocket(bool enable);
    bool isEnable();

    typedef enum{
        SPEED,
        PITCH,
        YAW,
        ROLL,
        CURRENT,
        VOLTAGE,
        POWER,
        TEMPERATURE_INSIDE,
        TEMPERATURE_OUTSIDE
    } INFO_TYPE;



public slots:
    QString getInfoText(INFO_TYPE t);
    void disconnectServer();
    void connectServer();

private:
    QTcpSocket* tcpSocket;
    SocketThread* myThread;

    SendManager* sendManager;
    ReceiveManager* receiveManager;

signals:
    void enableChanged();

};

#endif // SOCKETMANAGER_H
